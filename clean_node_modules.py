#!/usr/bin/env python3

import argparse
import os
import shutil


def parse_args():
    parser = argparse.ArgumentParser(
        description="recursively remove node_modules from all subdirectories in DIR"
    )
    parser.add_argument(
        "dir", help="the path to the directory to clean node modules for", metavar="DIR"
    )
    return parser.parse_args()


def clean_dir(path):
    count_cleaned = 0
    for child in os.listdir(path):
        if os.path.isdir(f"{path}/{child}"):
            if child == "node_modules":
                shutil.rmtree(f"{path}/{child}", ignore_errors=True)
                count_cleaned += 1
            else:
                count_cleaned += clean_dir(f"{path}/{child}")
    return count_cleaned


args = parse_args()

if os.path.exists(args.dir):
    amt = clean_dir(args.dir)
    cleaned_msg = f"cleaned {amt} node_modules dirs"
    print(cleaned_msg)
else:
    print("directory does not exist")
